Generate Python code to evaluate a list of stock tickers for portfolio optimization. The code should utilize market capitalization and average daily volume as key evaluation criteria. The process should ultimately assist in identifying potential assets for building an efficient portfolio, aligning with the principles of the Efficient Frontier. 
Specifically, the code should:
1. Retrieve historical stock data for a given set of tickers.
2. Calculate market capitalization for each ticker.
3. Calculate the average daily volume for each ticker.
4. Filter tickers based on pre-defined thresholds for market cap and average daily volume (e.g., minimum market cap for liquidity, minimum volume for tradability).
5. Calculate expected returns and covariance for the remaining tickers to analyze their potential performance and risk.
6. (Optional but recommended for Efficient Frontier) Generate the Efficient Frontier based on the analyzed tickers, visualizing the risk-return trade-off for different portfolio allocations.
7. Identify potentially optimal portfolios on the Efficient Frontier, such as the minimum volatility portfolio or the maximum Sharpe ratio portfolio. 
The code should be well-commented and use appropriate libraries like , , , and . Provide explanations of each step and the role of market cap and average daily volume in filtering and optimization." 
This prompt is designed to elicit a comprehensive Python script that incorporates the user's specific requirements (market cap and volume) into the framework of portfolio optimization and the Efficient Frontier. It also guides the AI to use relevant libraries and provide helpful explanations.